import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import "./PersonalAccount.css";


const examMetaData = {
  1: { title: "–ê–Ω–∫–µ—Ç–∞", description: "–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ —Å–≤–æ—ë–º –æ–ø—ã—Ç–µ, —Ç–∞–∫ –∫–∞–∫ –∞–Ω–∫–µ—Ç–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.", totalQuestions: 10, time: null },
  2: { title: "–≠–∫–∑–∞–º–µ–Ω –ø–æ Java", description: "–†–µ—à–∏—Ç–µ —ç–∫–∑–∞–º–µ–Ω. –ù–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞—ë—Ç—Å—è 10 –º–∏–Ω—É—Ç.", totalQuestions: 10, time: "10 –º–∏–Ω—É—Ç" },
  3: { title: "–≠–∫–∑–∞–º–µ–Ω –ø–æ JavaScript", description: "–†–µ—à–∏—Ç–µ —ç–∫–∑–∞–º–µ–Ω. –ù–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞—ë—Ç—Å—è 10 –º–∏–Ω—É—Ç.", totalQuestions: 10, time: "10 –º–∏–Ω—É—Ç" },
};

const Dashboard = () => {
  const [activeTab, setActiveTab] = useState("description");
  const [exams, setExams] = useState([]);
  const [applicationSubmitted, setApplicationSubmitted] = useState(false);
  const [resultStatus, setResultStatus] = useState("pending");
  const [teamName, setTeamName] = useState("");
  const [workshop, setWorkshop] = useState(null);
  const [isRegistered, setIsRegistered] = useState(false);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {

    const fetchLastWorkshop = async () => {
      try {
        const response = await fetch('http://localhost:8080/api/project-workshop/get/last',

        );
        if (!response.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π');
        const data = await response.json();
        setWorkshop(data);
        return data.id;
      } catch (err) {
        setError(err.message);
        throw err;
      }
    };


const checkRegistration = async (workshopId) => {
  try {
    const token = localStorage.getItem('authToken');
    if (!token) {
      throw new Error('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
    }

    const response = await fetch(
      `http://localhost:8080/api/student-project-workshop/check-registration?projectWorkshopId=${workshopId}`, 
      {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
          
        }
      }
    );

    if (!response.ok) {
      if (response.status === 401) {
        localStorage.removeItem('authToken');
        throw new Error('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞');
      }
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é');
    }

    const isRegistered = await response.json();
    setIsRegistered(isRegistered);
    return isRegistered;
  } catch (err) {
    setError(err.message);
    throw err;
  }
};


    const loadData = async () => {
      try {
        setLoading(true);
        const workshopId = await fetchLastWorkshop();
        const isReg = await checkRegistration(workshopId);
        

        const userData = await fetchUserData();
        setApplicationSubmitted(userData.hasSubmittedApplication || isReg);
        setExams(userData.exams);
        setResultStatus(userData.resultStatus);
        setTeamName(userData.teamName);
        
        if (userData.hasSubmittedApplication || isReg) {
          setActiveTab("exams");
        }
      } catch (err) {
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    loadData();
  }, []);

  // –ò–º–∏—Ç–∞—Ü–∏—è API-–∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const fetchUserData = async () => {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve({
          hasSubmittedApplication: false,
          exams: [
            { id: 1, status: "–ù–µ –Ω–∞—á–∞—Ç–æ", questionsAnswered: 0 },
            { id: 2, status: "–ù–µ –Ω–∞—á–∞—Ç–æ", questionsAnswered: 0 },
            { id: 3, status: "–ù–µ –Ω–∞—á–∞—Ç–æ", questionsAnswered: 0 },
          ],
          resultStatus: "pending",
          teamName: ""
        });
      }, 500);
    });
  };

  const handleApplicationClick = () => {
    setApplicationSubmitted(true);
    setActiveTab("exams");
  };

  if (loading) return <div className="dashboard">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>;
  if (error) return <div className="dashboard">–û—à–∏–±–∫–∞: {error}</div>;

  return (
    <div className="dashboard">
      <div className="content">
        <h1>–ü—Ä–æ–µ–∫—Ç–Ω–∞—è –º–∞—Å—Ç–µ—Ä—Å–∫–∞—è</h1>

        <div className="tabs">
          <div className={`tab ${activeTab === "description" ? "active" : ""}`} onClick={() => setActiveTab("description")}>
            –û–ø–∏—Å–∞–Ω–∏–µ
          </div>
          <div className={`tab ${activeTab === "exams" ? "active" : ""} ${!applicationSubmitted ? "disabled" : ""}`} onClick={() => applicationSubmitted && setActiveTab("exams")}>
            –≠–∫–∑–∞–º–µ–Ω—ã
          </div>
          <div className={`tab ${activeTab === "results" ? "active" : ""} ${!applicationSubmitted ? "disabled" : ""}`} onClick={() => applicationSubmitted && setActiveTab("results")}>
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
          </div>
        </div>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
        {activeTab === "description" && (
          <div className="description-text">
            {workshop && (
              <>
                <h2>{workshop.name} ({workshop.year})</h2>
                <p>
                  <strong>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:</strong> {new Date(workshop.startDateTime).toLocaleDateString()}
                  <br />
                  <strong>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</strong> {new Date(workshop.endDateTime).toLocaleDateString()}
                  <br />
                  <strong>–°—Ç–∞—Ç—É—Å:</strong> {workshop.isEnable ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ó–∞–≤–µ—Ä—à–µ–Ω–∞'}
                </p>
                <hr />
              </>
            )}
            
            <p>
              –ü—Ä–∏–≤–µ—Ç! –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É, –ø—Ä–æ–π—Ç–∏ –æ—Ç–±–æ—Ä –ø–æ Java –∏ JavaScript –∏ —Ä–µ—à–∏—Ç—å –∫–æ–Ω—Ç–µ—Å—Ç.
            </p>
            
            <button 
              className="apply-button" 
              disabled={applicationSubmitted || !workshop?.isEnable} 
              onClick={handleApplicationClick}
            >
              {applicationSubmitted 
                ? isRegistered 
                  ? "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã" 
                  : "–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞" 
                : workshop?.isEnable 
                  ? "–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É" 
                  : "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞"}
            </button>
            
            {isRegistered && (
              <div className="registration-status success">
                –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —ç—Ç—É –º–∞—Å—Ç–µ—Ä—Å–∫—É—é!
              </div>
            )}
          </div>
        )}

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
{activeTab === "results" && (
  <div className="results-section">
    {resultStatus === "pending" && (
      <div className="result-card pending">
        <div className="icon">‚è≥</div>
        <h2>–ò–¥—ë—Ç –æ—Ç–±–æ—Ä</h2>
        <p>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏. –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.</p>
      </div>
    )}

    {resultStatus === "passed" && (
      <div className="result-card success">
        <div className="icon">üéâ</div>
        <h2>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
        <p>–í—ã –ø—Ä–æ—à–ª–∏ –æ—Ç–±–æ—Ä –∏ –ø–æ–ø–∞–ª–∏ –≤ –∫–æ–º–∞–Ω–¥—É <strong>{teamName}</strong>!</p>
      </div>
    )}

    {resultStatus === "failed" && (
      <div className="result-card failed">
        <div className="icon">üòî</div>
        <h2>–ù–∞–±–æ—Ä –∑–∞–≤–µ—Ä—à—ë–Ω</h2>
        <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –æ—Ç–±–æ—Ä –≤ —ç—Ç–æ—Ç —Ä–∞–∑.</p>
      </div>
    )}
  </div>
)}
      </div>
    </div>
  );
};

export default Dashboard;

